{"ast":null,"code":"import React,{Component}from\"react\";import List from\"./List\";import{Dropdown,DropdownButton}from\"react-bootstrap\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class FilteredList extends Component{constructor(props){super(props);// The state is just a list of key/value pair (like a hashmap)\n// Sets the state whenever the user types on the search bar\nthis.onSearch=event=>{this.setState({search:event.target.value.toLowerCase()});};// Handler function for dropdown selection\nthis.onSelectFilterType=eventKey=>{this.setState({filterType:eventKey});};this.filterItem=item=>{// Checks if the current search term is contained in this item\nconst isSearchMatch=item.name.toLowerCase().search(this.state.search)!==-1;// Checks if the item matches the selected type or \"All\" is selected\nconst isTypeMatch=this.state.filterType===\"all\"||item.type===this.state.filterType;return isSearchMatch&&isTypeMatch;};this.state={search:\"\",filterType:\"all\"// Initial filter type\n};}render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"filter-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Produce Search\"}),/*#__PURE__*/_jsxs(DropdownButton,{id:\"typeDropdown\",title:\"Type\",children:[/*#__PURE__*/_jsx(Dropdown,{eventKey:\"all\",onSelect:this.onSelectFilterType,children:\"All\"}),this.props.items.map(item=>/*#__PURE__*/_jsx(Dropdown,{eventKey:item.type,onSelect:this.onSelectFilterType,children:item.name},item.type))]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search\",onChange:this.onSearch}),/*#__PURE__*/_jsx(List,{items:this.props.items.filter(this.filterItem)})]});}}export default FilteredList;","map":{"version":3,"names":["React","Component","List","Dropdown","DropdownButton","jsx","_jsx","jsxs","_jsxs","FilteredList","constructor","props","onSearch","event","setState","search","target","value","toLowerCase","onSelectFilterType","eventKey","filterType","filterItem","item","isSearchMatch","name","state","isTypeMatch","type","render","className","children","id","title","onSelect","items","map","placeholder","onChange","filter"],"sources":["/home/sakib/Downloads/Archive/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport List from \"./List\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n    // The state is just a list of key/value pair (like a hashmap)\n    this.state = {\n      search: \"\",\n      filterType: \"all\", // Initial filter type\n    };\n  }\n\n  // Sets the state whenever the user types on the search bar\n  onSearch = (event) => {\n    this.setState({ search: event.target.value.toLowerCase() });\n  };\n\n  // Handler function for dropdown selection\n  onSelectFilterType = (eventKey) => {\n    this.setState({ filterType: eventKey });\n  };\n\n  filterItem = (item) => {\n    // Checks if the current search term is contained in this item\n    const isSearchMatch =\n      item.name.toLowerCase().search(this.state.search) !== -1;\n    // Checks if the item matches the selected type or \"All\" is selected\n    const isTypeMatch =\n      this.state.filterType === \"all\" || item.type === this.state.filterType;\n    return isSearchMatch && isTypeMatch;\n  };\n\n  render() {\n    return (\n      <div className=\"filter-list\">\n        <h1>Produce Search</h1>\n        <DropdownButton id=\"typeDropdown\" title={\"Type\"}>\n          <Dropdown eventKey=\"all\" onSelect={this.onSelectFilterType}>\n            All\n          </Dropdown>\n          {/* Assuming you have a list of unique types in your produce data */}\n          {this.props.items.map((item) => (\n            <Dropdown\n              key={item.type}\n              eventKey={item.type}\n              onSelect={this.onSelectFilterType}\n            >\n              {item.name}\n            </Dropdown>\n          ))}\n        </DropdownButton>\n\n        <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\n\n        <List items={this.props.items.filter(this.filterItem)} />\n      </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAASC,QAAQ,CAAEC,cAAc,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,YAAY,QAAS,CAAAR,SAAU,CACnCS,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CACZ;AAOF;AAAA,KACAC,QAAQ,CAAIC,KAAK,EAAK,CACpB,IAAI,CAACC,QAAQ,CAAC,CAAEC,MAAM,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAE,CAAC,CAAC,CAC7D,CAAC,CAED;AAAA,KACAC,kBAAkB,CAAIC,QAAQ,EAAK,CACjC,IAAI,CAACN,QAAQ,CAAC,CAAEO,UAAU,CAAED,QAAS,CAAC,CAAC,CACzC,CAAC,MAEDE,UAAU,CAAIC,IAAI,EAAK,CACrB;AACA,KAAM,CAAAC,aAAa,CACjBD,IAAI,CAACE,IAAI,CAACP,WAAW,CAAC,CAAC,CAACH,MAAM,CAAC,IAAI,CAACW,KAAK,CAACX,MAAM,CAAC,GAAK,CAAC,CAAC,CAC1D;AACA,KAAM,CAAAY,WAAW,CACf,IAAI,CAACD,KAAK,CAACL,UAAU,GAAK,KAAK,EAAIE,IAAI,CAACK,IAAI,GAAK,IAAI,CAACF,KAAK,CAACL,UAAU,CACxE,MAAO,CAAAG,aAAa,EAAIG,WAAW,CACrC,CAAC,CAxBC,IAAI,CAACD,KAAK,CAAG,CACXX,MAAM,CAAE,EAAE,CACVM,UAAU,CAAE,KAAO;AACrB,CAAC,CACH,CAsBAQ,MAAMA,CAAA,CAAG,CACP,mBACErB,KAAA,QAAKsB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BzB,IAAA,OAAAyB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBvB,KAAA,CAACJ,cAAc,EAAC4B,EAAE,CAAC,cAAc,CAACC,KAAK,CAAE,MAAO,CAAAF,QAAA,eAC9CzB,IAAA,CAACH,QAAQ,EAACiB,QAAQ,CAAC,KAAK,CAACc,QAAQ,CAAE,IAAI,CAACf,kBAAmB,CAAAY,QAAA,CAAC,KAE5D,CAAU,CAAC,CAEV,IAAI,CAACpB,KAAK,CAACwB,KAAK,CAACC,GAAG,CAAEb,IAAI,eACzBjB,IAAA,CAACH,QAAQ,EAEPiB,QAAQ,CAAEG,IAAI,CAACK,IAAK,CACpBM,QAAQ,CAAE,IAAI,CAACf,kBAAmB,CAAAY,QAAA,CAEjCR,IAAI,CAACE,IAAI,EAJLF,IAAI,CAACK,IAKF,CACX,CAAC,EACY,CAAC,cAEjBtB,IAAA,UAAOsB,IAAI,CAAC,MAAM,CAACS,WAAW,CAAC,QAAQ,CAACC,QAAQ,CAAE,IAAI,CAAC1B,QAAS,CAAE,CAAC,cAEnEN,IAAA,CAACJ,IAAI,EAACiC,KAAK,CAAE,IAAI,CAACxB,KAAK,CAACwB,KAAK,CAACI,MAAM,CAAC,IAAI,CAACjB,UAAU,CAAE,CAAE,CAAC,EACtD,CAAC,CAEV,CACF,CAEA,cAAe,CAAAb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}